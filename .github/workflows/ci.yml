name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:6.2-alpine
        ports:
          - 6379:6379
          
      zookeeper:
        image: wurstmeister/zookeeper:latest
        ports:
          - 2181:2181
        options: >-
          --health-cmd "echo ruok | nc zookeeper 2181"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5    

      kafka:
        image: wurstmeister/kafka
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        ports:
          - 9092:9092
        options: >-
          --health-cmd "kafka-topics.sh --list --bootstrap-server kafka:9092"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: voto_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5  

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        java-package: jdk
        distribution: temurin

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build and test with Maven
      run: mvn clean package jacoco:report --fail-at-end
      
    - name: Verify JAR generation
      run: |
          if [ ! -f target/voto-*.jar ]; then
            echo "JAR file not found!" && exit 1
          fi 

    - name: Upload JaCoCo report
      uses: actions/upload-artifact@v3
      with:
        name: jacoco-report
        path: target/site/jacoco

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Build Docker Image
      run: docker build -t voto-app .

    - name: Push Docker Image to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker tag voto-app:latest strobson/voto-app:latest
        docker push strobson/voto-app:latest

